{
    "openapi": "3.0.2",
    "info": {
        "title": "Quartile API - Quartile LLC",
        "description": "OpenAPI Specification",
        "version": "0.1.0"
    },
    "paths": {
        "/auth/v1/token": {
            "get": {
                "tags": [
                    "Authorization"
                ],
                "summary": "Get Token",
                "description": "- **code**: The authorize token, normally the user with a customer profile does not have access to this data.\nIf this is the case, you can obtain new tokens in the <a href=\"/profile\">Tokens - \"Developer Portal > Profile\"</a>.",
                "operationId": "get_token_auth_v1_token_get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Code",
                            "pattern": "^[a-zA-Z0-9-_.]+",
                            "type": "string"
                        },
                        "name": "code",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthToken"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Erro generating, updating or validate token, check the information.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DefaultError"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/v1/refresh-token": {
            "post": {
                "tags": [
                    "Authorization"
                ],
                "summary": "Refresh Token",
                "description": "- **Body**: You need to enter the update token. If you do not have this data, \"log in\" again on the portal and request a new set of tokens (authorization_token and refresh_token).",
                "operationId": "refresh_token_auth_v1_refresh_token_post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RefreshToken"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthToken"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Erro generating, updating or validate token, check the information.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DefaultError"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/v1/validate-token": {
            "post": {
                "tags": [
                    "Authorization"
                ],
                "summary": "Validate Token",
                "description": "- **Authorization**: You can check if the \"authorization_token\" is valid.\n  Send the authorization_token in the header using the \"Authorization\" key.",
                "operationId": "validate_token_auth_v1_validate_token_post",
                "parameters": [
                    {
                        "description": "The authorization token is used to validate your identity in AD B2C, only accounts registered in our AD B2C can have API access.",
                        "required": true,
                        "schema": {
                            "title": "Authorization",
                            "pattern": "(^[A-Za-z0-9-_=]+\\.[A-Za-z0-9-_=]+\\.?[A-Za-z0-9-_.+\\/=]*$)|(^[B-b]earer\\s[A-Za-z0-9-_=]+\\.[A-Za-z0-9-_=]+\\.?[A-Za-z0-9-_.+\\/=]*$)",
                            "type": "string",
                            "description": "The authorization token is used to validate your identity in AD B2C, only accounts registered in our AD B2C can have API access."
                        },
                        "name": "Authorization",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidateToken"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized. Access token is missing or invalid.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedToken"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/amazon/v1/parameters/products": {
            "get": {
                "tags": [
                    "Amazon - Parameters"
                ],
                "summary": "Get Products",
                "operationId": "get_products_amazon_v1_parameters_products_get",
                "parameters": [
                    {
                        "description": "The identifier of a profile associated with the advertiser account. If not you have this data, use GET method on \"accounts\" resource to list profiles associated with the access token passed in the HTTP Authorization header.",
                        "required": false,
                        "schema": {
                            "title": "Profileid",
                            "minimum": 1,
                            "type": "integer",
                            "description": "The identifier of a profile associated with the advertiser account. If not you have this data, use GET method on \"accounts\" resource to list profiles associated with the access token passed in the HTTP Authorization header.",
                            "default": "{{profile_id}}"
                        },
                        "name": "profileId",
                        "in": "query"
                    },
                    {
                        "description": "The subscriber is used to do all access control on the API, for example: control of requests, reports, limits and access products, etc.",
                        "required": false,
                        "schema": {
                            "title": "Ocp-Apim-Subscription-Key",
                            "maxLength": 32,
                            "minLength": 32,
                            "type": "string",
                            "description": "The subscriber is used to do all access control on the API, for example: control of requests, reports, limits and access products, etc.",
                            "default": "{{subscriber_key}}"
                        },
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header"
                    },
                    {
                        "description": "The authorization token is used to validate your identity in AD B2C, only accounts registered in our AD B2C can have API access.",
                        "required": true,
                        "schema": {
                            "title": "Authorization",
                            "pattern": "(^[A-Za-z0-9-_=]+\\.[A-Za-z0-9-_=]+\\.?[A-Za-z0-9-_.+\\/=]*$)|(^[B-b]earer\\s[A-Za-z0-9-_=]+\\.[A-Za-z0-9-_=]+\\.?[A-Za-z0-9-_.+\\/=]*$)",
                            "type": "string",
                            "description": "The authorization token is used to validate your identity in AD B2C, only accounts registered in our AD B2C can have API access."
                        },
                        "name": "Authorization",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Response Get Products Amazon V1 Parameters Products Get",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BaseModelACoSProducts"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized. Access token or subscriber key is missing or invalid.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedToken"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Amazon - Parameters"
                ],
                "summary": "Put Products",
                "operationId": "put_products_amazon_v1_parameters_products_put",
                "parameters": [
                    {
                        "description": "The subscriber is used to do all access control on the API, for example: control of requests, reports, limits and access products, etc.",
                        "required": false,
                        "schema": {
                            "title": "Ocp-Apim-Subscription-Key",
                            "maxLength": 32,
                            "minLength": 32,
                            "type": "string",
                            "description": "The subscriber is used to do all access control on the API, for example: control of requests, reports, limits and access products, etc.",
                            "default": "{{subscriber_key}}"
                        },
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header"
                    },
                    {
                        "description": "The authorization token is used to validate your identity in AD B2C, only accounts registered in our AD B2C can have API access.",
                        "required": true,
                        "schema": {
                            "title": "Authorization",
                            "pattern": "(^[A-Za-z0-9-_=]+\\.[A-Za-z0-9-_=]+\\.?[A-Za-z0-9-_.+\\/=]*$)|(^[B-b]earer\\s[A-Za-z0-9-_=]+\\.[A-Za-z0-9-_=]+\\.?[A-Za-z0-9-_.+\\/=]*$)",
                            "type": "string",
                            "description": "The authorization token is used to validate your identity in AD B2C, only accounts registered in our AD B2C can have API access."
                        },
                        "name": "Authorization",
                        "in": "header"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "title": "Products",
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ModelACoSProductsUpdate"
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Response Put Products Amazon V1 Parameters Products Put",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BaseModelACoSProductsTransac"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized. Access token or subscriber key is missing or invalid.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedToken"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Amazon - Parameters"
                ],
                "summary": "Post Products",
                "operationId": "post_products_amazon_v1_parameters_products_post",
                "parameters": [
                    {
                        "description": "The subscriber is used to do all access control on the API, for example: control of requests, reports, limits and access products, etc.",
                        "required": false,
                        "schema": {
                            "title": "Ocp-Apim-Subscription-Key",
                            "maxLength": 32,
                            "minLength": 32,
                            "type": "string",
                            "description": "The subscriber is used to do all access control on the API, for example: control of requests, reports, limits and access products, etc.",
                            "default": "{{subscriber_key}}"
                        },
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header"
                    },
                    {
                        "description": "The authorization token is used to validate your identity in AD B2C, only accounts registered in our AD B2C can have API access.",
                        "required": true,
                        "schema": {
                            "title": "Authorization",
                            "pattern": "(^[A-Za-z0-9-_=]+\\.[A-Za-z0-9-_=]+\\.?[A-Za-z0-9-_.+\\/=]*$)|(^[B-b]earer\\s[A-Za-z0-9-_=]+\\.[A-Za-z0-9-_=]+\\.?[A-Za-z0-9-_.+\\/=]*$)",
                            "type": "string",
                            "description": "The authorization token is used to validate your identity in AD B2C, only accounts registered in our AD B2C can have API access."
                        },
                        "name": "Authorization",
                        "in": "header"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "title": "Products",
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ModelACoSProducts"
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Response Post Products Amazon V1 Parameters Products Post",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BaseModelACoSProductsTransac"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized. Access token or subscriber key is missing or invalid.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedToken"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Amazon - Parameters"
                ],
                "summary": "Delete Products",
                "operationId": "delete_products_amazon_v1_parameters_products_delete",
                "parameters": [
                    {
                        "description": "The subscriber is used to do all access control on the API, for example: control of requests, reports, limits and access products, etc.",
                        "required": false,
                        "schema": {
                            "title": "Ocp-Apim-Subscription-Key",
                            "maxLength": 32,
                            "minLength": 32,
                            "type": "string",
                            "description": "The subscriber is used to do all access control on the API, for example: control of requests, reports, limits and access products, etc.",
                            "default": "{{subscriber_key}}"
                        },
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header"
                    },
                    {
                        "description": "The authorization token is used to validate your identity in AD B2C, only accounts registered in our AD B2C can have API access.",
                        "required": true,
                        "schema": {
                            "title": "Authorization",
                            "pattern": "(^[A-Za-z0-9-_=]+\\.[A-Za-z0-9-_=]+\\.?[A-Za-z0-9-_.+\\/=]*$)|(^[B-b]earer\\s[A-Za-z0-9-_=]+\\.[A-Za-z0-9-_=]+\\.?[A-Za-z0-9-_.+\\/=]*$)",
                            "type": "string",
                            "description": "The authorization token is used to validate your identity in AD B2C, only accounts registered in our AD B2C can have API access."
                        },
                        "name": "Authorization",
                        "in": "header"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ModelACoSProductsDelete"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BaseModelACoSDefaultDelete"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The data was not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Message"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized. Access token or subscriber key is missing or invalid.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedToken"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/amazon/v1/parameters/campaigns": {
            "get": {
                "tags": [
                    "Amazon - Parameters"
                ],
                "summary": "Get Campaigns",
                "operationId": "get_campaigns_amazon_v1_parameters_campaigns_get",
                "parameters": [
                    {
                        "description": "The identifier of a profile associated with the advertiser account. If not you have this data, use GET method on \"accounts\" resource to list profiles associated with the access token passed in the HTTP Authorization header.",
                        "required": false,
                        "schema": {
                            "title": "Profileid",
                            "minimum": 1,
                            "type": "integer",
                            "description": "The identifier of a profile associated with the advertiser account. If not you have this data, use GET method on \"accounts\" resource to list profiles associated with the access token passed in the HTTP Authorization header.",
                            "default": "{{profile_id}}"
                        },
                        "name": "profileId",
                        "in": "query"
                    },
                    {
                        "description": "The subscriber is used to do all access control on the API, for example: control of requests, reports, limits and access products, etc.",
                        "required": false,
                        "schema": {
                            "title": "Ocp-Apim-Subscription-Key",
                            "maxLength": 32,
                            "minLength": 32,
                            "type": "string",
                            "description": "The subscriber is used to do all access control on the API, for example: control of requests, reports, limits and access products, etc.",
                            "default": "{{subscriber_key}}"
                        },
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header"
                    },
                    {
                        "description": "The authorization token is used to validate your identity in AD B2C, only accounts registered in our AD B2C can have API access.",
                        "required": true,
                        "schema": {
                            "title": "Authorization",
                            "pattern": "(^[A-Za-z0-9-_=]+\\.[A-Za-z0-9-_=]+\\.?[A-Za-z0-9-_.+\\/=]*$)|(^[B-b]earer\\s[A-Za-z0-9-_=]+\\.[A-Za-z0-9-_=]+\\.?[A-Za-z0-9-_.+\\/=]*$)",
                            "type": "string",
                            "description": "The authorization token is used to validate your identity in AD B2C, only accounts registered in our AD B2C can have API access."
                        },
                        "name": "Authorization",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Response Get Campaigns Amazon V1 Parameters Campaigns Get",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BaseModelACoSCampaigns"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized. Access token or subscriber key is missing or invalid.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedToken"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Amazon - Parameters"
                ],
                "summary": "Put Campaigns",
                "operationId": "put_campaigns_amazon_v1_parameters_campaigns_put",
                "parameters": [
                    {
                        "description": "The subscriber is used to do all access control on the API, for example: control of requests, reports, limits and access products, etc.",
                        "required": false,
                        "schema": {
                            "title": "Ocp-Apim-Subscription-Key",
                            "maxLength": 32,
                            "minLength": 32,
                            "type": "string",
                            "description": "The subscriber is used to do all access control on the API, for example: control of requests, reports, limits and access products, etc.",
                            "default": "{{subscriber_key}}"
                        },
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header"
                    },
                    {
                        "description": "The authorization token is used to validate your identity in AD B2C, only accounts registered in our AD B2C can have API access.",
                        "required": true,
                        "schema": {
                            "title": "Authorization",
                            "pattern": "(^[A-Za-z0-9-_=]+\\.[A-Za-z0-9-_=]+\\.?[A-Za-z0-9-_.+\\/=]*$)|(^[B-b]earer\\s[A-Za-z0-9-_=]+\\.[A-Za-z0-9-_=]+\\.?[A-Za-z0-9-_.+\\/=]*$)",
                            "type": "string",
                            "description": "The authorization token is used to validate your identity in AD B2C, only accounts registered in our AD B2C can have API access."
                        },
                        "name": "Authorization",
                        "in": "header"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "title": "Campaigns",
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ModelACoSCampaignsUpdate"
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Response Put Campaigns Amazon V1 Parameters Campaigns Put",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BaseModelACoSCampaignsTransac"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized. Access token or subscriber key is missing or invalid.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedToken"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Amazon - Parameters"
                ],
                "summary": "Post Campaigns",
                "operationId": "post_campaigns_amazon_v1_parameters_campaigns_post",
                "parameters": [
                    {
                        "description": "The subscriber is used to do all access control on the API, for example: control of requests, reports, limits and access products, etc.",
                        "required": false,
                        "schema": {
                            "title": "Ocp-Apim-Subscription-Key",
                            "maxLength": 32,
                            "minLength": 32,
                            "type": "string",
                            "description": "The subscriber is used to do all access control on the API, for example: control of requests, reports, limits and access products, etc.",
                            "default": "{{subscriber_key}}"
                        },
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header"
                    },
                    {
                        "description": "The authorization token is used to validate your identity in AD B2C, only accounts registered in our AD B2C can have API access.",
                        "required": true,
                        "schema": {
                            "title": "Authorization",
                            "pattern": "(^[A-Za-z0-9-_=]+\\.[A-Za-z0-9-_=]+\\.?[A-Za-z0-9-_.+\\/=]*$)|(^[B-b]earer\\s[A-Za-z0-9-_=]+\\.[A-Za-z0-9-_=]+\\.?[A-Za-z0-9-_.+\\/=]*$)",
                            "type": "string",
                            "description": "The authorization token is used to validate your identity in AD B2C, only accounts registered in our AD B2C can have API access."
                        },
                        "name": "Authorization",
                        "in": "header"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "title": "Campaigns",
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ModelACoSCampaigns"
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Response Post Campaigns Amazon V1 Parameters Campaigns Post",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BaseModelACoSCampaignsTransac"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized. Access token or subscriber key is missing or invalid.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedToken"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Amazon - Parameters"
                ],
                "summary": "Delete Campaigns",
                "operationId": "delete_campaigns_amazon_v1_parameters_campaigns_delete",
                "parameters": [
                    {
                        "description": "The subscriber is used to do all access control on the API, for example: control of requests, reports, limits and access products, etc.",
                        "required": false,
                        "schema": {
                            "title": "Ocp-Apim-Subscription-Key",
                            "maxLength": 32,
                            "minLength": 32,
                            "type": "string",
                            "description": "The subscriber is used to do all access control on the API, for example: control of requests, reports, limits and access products, etc.",
                            "default": "{{subscriber_key}}"
                        },
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header"
                    },
                    {
                        "description": "The authorization token is used to validate your identity in AD B2C, only accounts registered in our AD B2C can have API access.",
                        "required": true,
                        "schema": {
                            "title": "Authorization",
                            "pattern": "(^[A-Za-z0-9-_=]+\\.[A-Za-z0-9-_=]+\\.?[A-Za-z0-9-_.+\\/=]*$)|(^[B-b]earer\\s[A-Za-z0-9-_=]+\\.[A-Za-z0-9-_=]+\\.?[A-Za-z0-9-_.+\\/=]*$)",
                            "type": "string",
                            "description": "The authorization token is used to validate your identity in AD B2C, only accounts registered in our AD B2C can have API access."
                        },
                        "name": "Authorization",
                        "in": "header"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ModelACoSProductsDelete"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BaseModelACoSDefaultDelete"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The data was not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Message"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized. Access token or subscriber key is missing or invalid.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedToken"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/amazon/v1/pipe/campaigns": {
            "get": {
                "tags": [
                    "Amazon - Pipe"
                ],
                "summary": "Get Campaigns",
                "operationId": "get_campaigns_amazon_v1_pipe_campaigns_get",
                "parameters": [
                    {
                        "description": "Token from a previous request. Use in conjunction with the **maxResults** parameter to control pagination of the returned array.",
                        "required": false,
                        "schema": {
                            "title": "Nexttoken",
                            "maxLength": 32,
                            "minLength": 32,
                            "type": "string",
                            "description": "Token from a previous request. Use in conjunction with the **maxResults** parameter to control pagination of the returned array."
                        },
                        "name": "nextToken",
                        "in": "query"
                    },
                    {
                        "description": "Sets the maximum number of records returned per request. Use in conjunction with the **nextToken** parameter to control pagination. For example, supplying maxResults=20 with a previously returned token will fetch up to the next 20 items. In some cases, fewer items may be returned. Defaults to max page size (5000 per page). ",
                        "required": false,
                        "schema": {
                            "title": "Maxresults",
                            "maximum": 5000,
                            "minimum": 1,
                            "type": "integer",
                            "description": "Sets the maximum number of records returned per request. Use in conjunction with the **nextToken** parameter to control pagination. For example, supplying maxResults=20 with a previously returned token will fetch up to the next 20 items. In some cases, fewer items may be returned. Defaults to max page size (5000 per page). ",
                            "default": 5000
                        },
                        "name": "maxResults",
                        "in": "query"
                    },
                    {
                        "description": "The identifier of a profile associated with the advertiser account. If not you have this data, use GET method on \"accounts\" resource to list profiles associated with the access token passed in the HTTP Authorization header.",
                        "required": false,
                        "schema": {
                            "title": "Profileid",
                            "minimum": 1,
                            "type": "integer",
                            "description": "The identifier of a profile associated with the advertiser account. If not you have this data, use GET method on \"accounts\" resource to list profiles associated with the access token passed in the HTTP Authorization header.",
                            "default": "{{profile_id}}"
                        },
                        "name": "profileId",
                        "in": "query"
                    },
                    {
                        "description": "The subscriber is used to do all access control on the API, for example: control of requests, reports, limits and access products, etc.",
                        "required": false,
                        "schema": {
                            "title": "Ocp-Apim-Subscription-Key",
                            "maxLength": 32,
                            "minLength": 32,
                            "type": "string",
                            "description": "The subscriber is used to do all access control on the API, for example: control of requests, reports, limits and access products, etc.",
                            "default": "{{subscriber_key}}"
                        },
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header"
                    },
                    {
                        "description": "The authorization token is used to validate your identity in AD B2C, only accounts registered in our AD B2C can have API access.",
                        "required": true,
                        "schema": {
                            "title": "Authorization",
                            "pattern": "(^[A-Za-z0-9-_=]+\\.[A-Za-z0-9-_=]+\\.?[A-Za-z0-9-_.+\\/=]*$)|(^[B-b]earer\\s[A-Za-z0-9-_=]+\\.[A-Za-z0-9-_=]+\\.?[A-Za-z0-9-_.+\\/=]*$)",
                            "type": "string",
                            "description": "The authorization token is used to validate your identity in AD B2C, only accounts registered in our AD B2C can have API access."
                        },
                        "name": "Authorization",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BaseModelCampaignPage"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The data was not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Message"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized. Access token or subscriber key is missing or invalid.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedToken"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error in our storage, backgroud erro in db.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Message"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/amazon/v1/pipe/adgroup": {
            "get": {
                "tags": [
                    "Amazon - Pipe"
                ],
                "summary": "Get Adgroup",
                "operationId": "get_adgroup_amazon_v1_pipe_adgroup_get",
                "parameters": [
                    {
                        "description": "Token from a previous request. Use in conjunction with the **maxResults** parameter to control pagination of the returned array.",
                        "required": false,
                        "schema": {
                            "title": "Nexttoken",
                            "maxLength": 32,
                            "minLength": 32,
                            "type": "string",
                            "description": "Token from a previous request. Use in conjunction with the **maxResults** parameter to control pagination of the returned array."
                        },
                        "name": "nextToken",
                        "in": "query"
                    },
                    {
                        "description": "Sets the maximum number of records returned per request. Use in conjunction with the **nextToken** parameter to control pagination. For example, supplying maxResults=20 with a previously returned token will fetch up to the next 20 items. In some cases, fewer items may be returned. Defaults to max page size (5000 per page). ",
                        "required": false,
                        "schema": {
                            "title": "Maxresults",
                            "maximum": 5000,
                            "minimum": 1,
                            "type": "integer",
                            "description": "Sets the maximum number of records returned per request. Use in conjunction with the **nextToken** parameter to control pagination. For example, supplying maxResults=20 with a previously returned token will fetch up to the next 20 items. In some cases, fewer items may be returned. Defaults to max page size (5000 per page). ",
                            "default": 5000
                        },
                        "name": "maxResults",
                        "in": "query"
                    },
                    {
                        "description": "The identifier of a profile associated with the advertiser account. If not you have this data, use GET method on \"accounts\" resource to list profiles associated with the access token passed in the HTTP Authorization header.",
                        "required": false,
                        "schema": {
                            "title": "Profileid",
                            "minimum": 1,
                            "type": "integer",
                            "description": "The identifier of a profile associated with the advertiser account. If not you have this data, use GET method on \"accounts\" resource to list profiles associated with the access token passed in the HTTP Authorization header.",
                            "default": "{{profile_id}}"
                        },
                        "name": "profileId",
                        "in": "query"
                    },
                    {
                        "description": "The subscriber is used to do all access control on the API, for example: control of requests, reports, limits and access products, etc.",
                        "required": false,
                        "schema": {
                            "title": "Ocp-Apim-Subscription-Key",
                            "maxLength": 32,
                            "minLength": 32,
                            "type": "string",
                            "description": "The subscriber is used to do all access control on the API, for example: control of requests, reports, limits and access products, etc.",
                            "default": "{{subscriber_key}}"
                        },
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header"
                    },
                    {
                        "description": "The authorization token is used to validate your identity in AD B2C, only accounts registered in our AD B2C can have API access.",
                        "required": true,
                        "schema": {
                            "title": "Authorization",
                            "pattern": "(^[A-Za-z0-9-_=]+\\.[A-Za-z0-9-_=]+\\.?[A-Za-z0-9-_.+\\/=]*$)|(^[B-b]earer\\s[A-Za-z0-9-_=]+\\.[A-Za-z0-9-_=]+\\.?[A-Za-z0-9-_.+\\/=]*$)",
                            "type": "string",
                            "description": "The authorization token is used to validate your identity in AD B2C, only accounts registered in our AD B2C can have API access."
                        },
                        "name": "Authorization",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/app__v1__amazon__schema__output__resource__pipe__BaseModelAdGroupPage"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The data was not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Message"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized. Access token or subscriber key is missing or invalid.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedToken"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error in our storage, backgroud erro in db.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Message"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/amazon/v1/pipe/target": {
            "get": {
                "tags": [
                    "Amazon - Pipe"
                ],
                "summary": "Get Target",
                "operationId": "get_target_amazon_v1_pipe_target_get",
                "parameters": [
                    {
                        "description": "Token from a previous request. Use in conjunction with the **maxResults** parameter to control pagination of the returned array.",
                        "required": false,
                        "schema": {
                            "title": "Nexttoken",
                            "maxLength": 32,
                            "minLength": 32,
                            "type": "string",
                            "description": "Token from a previous request. Use in conjunction with the **maxResults** parameter to control pagination of the returned array."
                        },
                        "name": "nextToken",
                        "in": "query"
                    },
                    {
                        "description": "Sets the maximum number of records returned per request. Use in conjunction with the **nextToken** parameter to control pagination. For example, supplying maxResults=20 with a previously returned token will fetch up to the next 20 items. In some cases, fewer items may be returned. Defaults to max page size (5000 per page). ",
                        "required": false,
                        "schema": {
                            "title": "Maxresults",
                            "maximum": 5000,
                            "minimum": 1,
                            "type": "integer",
                            "description": "Sets the maximum number of records returned per request. Use in conjunction with the **nextToken** parameter to control pagination. For example, supplying maxResults=20 with a previously returned token will fetch up to the next 20 items. In some cases, fewer items may be returned. Defaults to max page size (5000 per page). ",
                            "default": 5000
                        },
                        "name": "maxResults",
                        "in": "query"
                    },
                    {
                        "description": "The identifier of a profile associated with the advertiser account. If not you have this data, use GET method on \"accounts\" resource to list profiles associated with the access token passed in the HTTP Authorization header.",
                        "required": false,
                        "schema": {
                            "title": "Profileid",
                            "minimum": 1,
                            "type": "integer",
                            "description": "The identifier of a profile associated with the advertiser account. If not you have this data, use GET method on \"accounts\" resource to list profiles associated with the access token passed in the HTTP Authorization header.",
                            "default": "{{profile_id}}"
                        },
                        "name": "profileId",
                        "in": "query"
                    },
                    {
                        "description": "The subscriber is used to do all access control on the API, for example: control of requests, reports, limits and access products, etc.",
                        "required": false,
                        "schema": {
                            "title": "Ocp-Apim-Subscription-Key",
                            "maxLength": 32,
                            "minLength": 32,
                            "type": "string",
                            "description": "The subscriber is used to do all access control on the API, for example: control of requests, reports, limits and access products, etc.",
                            "default": "{{subscriber_key}}"
                        },
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header"
                    },
                    {
                        "description": "The authorization token is used to validate your identity in AD B2C, only accounts registered in our AD B2C can have API access.",
                        "required": true,
                        "schema": {
                            "title": "Authorization",
                            "pattern": "(^[A-Za-z0-9-_=]+\\.[A-Za-z0-9-_=]+\\.?[A-Za-z0-9-_.+\\/=]*$)|(^[B-b]earer\\s[A-Za-z0-9-_=]+\\.[A-Za-z0-9-_=]+\\.?[A-Za-z0-9-_.+\\/=]*$)",
                            "type": "string",
                            "description": "The authorization token is used to validate your identity in AD B2C, only accounts registered in our AD B2C can have API access."
                        },
                        "name": "Authorization",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BaseModelTargetAdPage"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The data was not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Message"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized. Access token or subscriber key is missing or invalid.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedToken"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error in our storage, backgroud erro in db.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Message"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/amazon/v1/pipe/keyword": {
            "get": {
                "tags": [
                    "Amazon - Pipe"
                ],
                "summary": "Get Keyword",
                "operationId": "get_keyword_amazon_v1_pipe_keyword_get",
                "parameters": [
                    {
                        "description": "Token from a previous request. Use in conjunction with the **maxResults** parameter to control pagination of the returned array.",
                        "required": false,
                        "schema": {
                            "title": "Nexttoken",
                            "maxLength": 32,
                            "minLength": 32,
                            "type": "string",
                            "description": "Token from a previous request. Use in conjunction with the **maxResults** parameter to control pagination of the returned array."
                        },
                        "name": "nextToken",
                        "in": "query"
                    },
                    {
                        "description": "Sets the maximum number of records returned per request. Use in conjunction with the **nextToken** parameter to control pagination. For example, supplying maxResults=20 with a previously returned token will fetch up to the next 20 items. In some cases, fewer items may be returned. Defaults to max page size (5000 per page). ",
                        "required": false,
                        "schema": {
                            "title": "Maxresults",
                            "maximum": 5000,
                            "minimum": 1,
                            "type": "integer",
                            "description": "Sets the maximum number of records returned per request. Use in conjunction with the **nextToken** parameter to control pagination. For example, supplying maxResults=20 with a previously returned token will fetch up to the next 20 items. In some cases, fewer items may be returned. Defaults to max page size (5000 per page). ",
                            "default": 5000
                        },
                        "name": "maxResults",
                        "in": "query"
                    },
                    {
                        "description": "The identifier of a profile associated with the advertiser account. If not you have this data, use GET method on \"accounts\" resource to list profiles associated with the access token passed in the HTTP Authorization header.",
                        "required": false,
                        "schema": {
                            "title": "Profileid",
                            "minimum": 1,
                            "type": "integer",
                            "description": "The identifier of a profile associated with the advertiser account. If not you have this data, use GET method on \"accounts\" resource to list profiles associated with the access token passed in the HTTP Authorization header.",
                            "default": "{{profile_id}}"
                        },
                        "name": "profileId",
                        "in": "query"
                    },
                    {
                        "description": "The subscriber is used to do all access control on the API, for example: control of requests, reports, limits and access products, etc.",
                        "required": false,
                        "schema": {
                            "title": "Ocp-Apim-Subscription-Key",
                            "maxLength": 32,
                            "minLength": 32,
                            "type": "string",
                            "description": "The subscriber is used to do all access control on the API, for example: control of requests, reports, limits and access products, etc.",
                            "default": "{{subscriber_key}}"
                        },
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header"
                    },
                    {
                        "description": "The authorization token is used to validate your identity in AD B2C, only accounts registered in our AD B2C can have API access.",
                        "required": true,
                        "schema": {
                            "title": "Authorization",
                            "pattern": "(^[A-Za-z0-9-_=]+\\.[A-Za-z0-9-_=]+\\.?[A-Za-z0-9-_.+\\/=]*$)|(^[B-b]earer\\s[A-Za-z0-9-_=]+\\.[A-Za-z0-9-_=]+\\.?[A-Za-z0-9-_.+\\/=]*$)",
                            "type": "string",
                            "description": "The authorization token is used to validate your identity in AD B2C, only accounts registered in our AD B2C can have API access."
                        },
                        "name": "Authorization",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BaseModelKeywordPage"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The data was not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Message"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized. Access token or subscriber key is missing or invalid.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedToken"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error in our storage, backgroud erro in db.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Message"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/amazon/v1/pipe/reports": {
            "get": {
                "tags": [
                    "Amazon - Pipe"
                ],
                "summary": "Get Reports",
                "description": "After requesting the reportId in the **POST** method. Request the report URL to download the file.<br>If status_code is 206 (continue, the report is being generated.), keep requesting.<br>If status_code is 422 there may have been an error in generating the report, request again using **POST** method.",
                "operationId": "get_reports_amazon_v1_pipe_reports_get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "title": "Reportid",
                            "maxLength": 32,
                            "minLength": 32,
                            "type": "string"
                        },
                        "name": "reportId",
                        "in": "query"
                    },
                    {
                        "description": "The subscriber is used to do all access control on the API, for example: control of requests, reports, limits and access products, etc.",
                        "required": false,
                        "schema": {
                            "title": "Ocp-Apim-Subscription-Key",
                            "maxLength": 32,
                            "minLength": 32,
                            "type": "string",
                            "description": "The subscriber is used to do all access control on the API, for example: control of requests, reports, limits and access products, etc.",
                            "default": "{{subscriber_key}}"
                        },
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header"
                    },
                    {
                        "description": "The authorization token is used to validate your identity in AD B2C, only accounts registered in our AD B2C can have API access.",
                        "required": true,
                        "schema": {
                            "title": "Authorization",
                            "pattern": "(^[A-Za-z0-9-_=]+\\.[A-Za-z0-9-_=]+\\.?[A-Za-z0-9-_.+\\/=]*$)|(^[B-b]earer\\s[A-Za-z0-9-_=]+\\.[A-Za-z0-9-_=]+\\.?[A-Za-z0-9-_.+\\/=]*$)",
                            "type": "string",
                            "description": "The authorization token is used to validate your identity in AD B2C, only accounts registered in our AD B2C can have API access."
                        },
                        "name": "Authorization",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BaseModelAmazonReport"
                                }
                            }
                        }
                    },
                    "206": {
                        "description": "Processing report.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Message"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized. Access token or subscriber key is missing or invalid.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedToken"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Problem generating report or validation error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Message"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Amazon - Pipe"
                ],
                "summary": "Post Reports",
                "description": "Request the creation of a performance report for all entities of a single type which have performance data to report. Record types can be one of campaign, adgroup, keyword, product and target. ReportId: You will use to request the URL of the file to download. Use the GET method.",
                "operationId": "post_reports_amazon_v1_pipe_reports_post",
                "parameters": [
                    {
                        "description": "The subscriber is used to do all access control on the API, for example: control of requests, reports, limits and access products, etc.",
                        "required": false,
                        "schema": {
                            "title": "Ocp-Apim-Subscription-Key",
                            "maxLength": 32,
                            "minLength": 32,
                            "type": "string",
                            "description": "The subscriber is used to do all access control on the API, for example: control of requests, reports, limits and access products, etc.",
                            "default": "{{subscriber_key}}"
                        },
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header"
                    },
                    {
                        "description": "The authorization token is used to validate your identity in AD B2C, only accounts registered in our AD B2C can have API access.",
                        "required": true,
                        "schema": {
                            "title": "Authorization",
                            "pattern": "(^[A-Za-z0-9-_=]+\\.[A-Za-z0-9-_=]+\\.?[A-Za-z0-9-_.+\\/=]*$)|(^[B-b]earer\\s[A-Za-z0-9-_=]+\\.[A-Za-z0-9-_=]+\\.?[A-Za-z0-9-_.+\\/=]*$)",
                            "type": "string",
                            "description": "The authorization token is used to validate your identity in AD B2C, only accounts registered in our AD B2C can have API access."
                        },
                        "name": "Authorization",
                        "in": "header"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AmazonReportIn"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BaseModelReportId"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The data was not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Message"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized. Access token or subscriber key is missing or invalid.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedToken"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error in our storage, backgroud erro in db.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Message"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/amazon/v1/accounts": {
            "get": {
                "tags": [
                    "Amazon - Accounts"
                ],
                "summary": "Get Accounts",
                "operationId": "get_accounts_amazon_v1_accounts_get",
                "parameters": [
                    {
                        "description": "The subscriber is used to do all access control on the API, for example: control of requests, reports, limits and access products, etc.",
                        "required": false,
                        "schema": {
                            "title": "Ocp-Apim-Subscription-Key",
                            "maxLength": 32,
                            "minLength": 32,
                            "type": "string",
                            "description": "The subscriber is used to do all access control on the API, for example: control of requests, reports, limits and access products, etc.",
                            "default": "{{subscriber_key}}"
                        },
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header"
                    },
                    {
                        "description": "The authorization token is used to validate your identity in AD B2C, only accounts registered in our AD B2C can have API access.",
                        "required": true,
                        "schema": {
                            "title": "Authorization",
                            "pattern": "(^[A-Za-z0-9-_=]+\\.[A-Za-z0-9-_=]+\\.?[A-Za-z0-9-_.+\\/=]*$)|(^[B-b]earer\\s[A-Za-z0-9-_=]+\\.[A-Za-z0-9-_=]+\\.?[A-Za-z0-9-_.+\\/=]*$)",
                            "type": "string",
                            "description": "The authorization token is used to validate your identity in AD B2C, only accounts registered in our AD B2C can have API access."
                        },
                        "name": "Authorization",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BaseModelAccounts"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The data was not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Message"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized. Access token or subscriber key is missing or invalid.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedToken"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/amazon/v1/products/tag": {
            "get": {
                "tags": [
                    "Amazon - Products"
                ],
                "summary": "Get Tag",
                "operationId": "get_tag_amazon_v1_products_tag_get",
                "parameters": [
                    {
                        "description": "The identifier of a profile associated with the advertiser account. If not you have this data, use GET method on \"accounts\" resource to list profiles associated with the access token passed in the HTTP Authorization header.",
                        "required": false,
                        "schema": {
                            "title": "Profileid",
                            "minimum": 1,
                            "type": "integer",
                            "description": "The identifier of a profile associated with the advertiser account. If not you have this data, use GET method on \"accounts\" resource to list profiles associated with the access token passed in the HTTP Authorization header.",
                            "default": "{{profile_id}}"
                        },
                        "name": "profileId",
                        "in": "query"
                    },
                    {
                        "description": "The subscriber is used to do all access control on the API, for example: control of requests, reports, limits and access products, etc.",
                        "required": false,
                        "schema": {
                            "title": "Ocp-Apim-Subscription-Key",
                            "maxLength": 32,
                            "minLength": 32,
                            "type": "string",
                            "description": "The subscriber is used to do all access control on the API, for example: control of requests, reports, limits and access products, etc.",
                            "default": "{{subscriber_key}}"
                        },
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header"
                    },
                    {
                        "description": "The authorization token is used to validate your identity in AD B2C, only accounts registered in our AD B2C can have API access.",
                        "required": true,
                        "schema": {
                            "title": "Authorization",
                            "pattern": "(^[A-Za-z0-9-_=]+\\.[A-Za-z0-9-_=]+\\.?[A-Za-z0-9-_.+\\/=]*$)|(^[B-b]earer\\s[A-Za-z0-9-_=]+\\.[A-Za-z0-9-_=]+\\.?[A-Za-z0-9-_.+\\/=]*$)",
                            "type": "string",
                            "description": "The authorization token is used to validate your identity in AD B2C, only accounts registered in our AD B2C can have API access."
                        },
                        "name": "Authorization",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Response Get Tag Amazon V1 Products Tag Get",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BaseModelTag"
                                    }
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "The data was not found."
                    },
                    "401": {
                        "description": "Unauthorized. Access token or subscriber key is missing or invalid.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedToken"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Amazon - Products"
                ],
                "summary": "Put Tag",
                "operationId": "put_tag_amazon_v1_products_tag_put",
                "parameters": [
                    {
                        "description": "The subscriber is used to do all access control on the API, for example: control of requests, reports, limits and access products, etc.",
                        "required": false,
                        "schema": {
                            "title": "Ocp-Apim-Subscription-Key",
                            "maxLength": 32,
                            "minLength": 32,
                            "type": "string",
                            "description": "The subscriber is used to do all access control on the API, for example: control of requests, reports, limits and access products, etc.",
                            "default": "{{subscriber_key}}"
                        },
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header"
                    },
                    {
                        "description": "The authorization token is used to validate your identity in AD B2C, only accounts registered in our AD B2C can have API access.",
                        "required": true,
                        "schema": {
                            "title": "Authorization",
                            "pattern": "(^[A-Za-z0-9-_=]+\\.[A-Za-z0-9-_=]+\\.?[A-Za-z0-9-_.+\\/=]*$)|(^[B-b]earer\\s[A-Za-z0-9-_=]+\\.[A-Za-z0-9-_=]+\\.?[A-Za-z0-9-_.+\\/=]*$)",
                            "type": "string",
                            "description": "The authorization token is used to validate your identity in AD B2C, only accounts registered in our AD B2C can have API access."
                        },
                        "name": "Authorization",
                        "in": "header"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "title": "Tags",
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/BaseModelTagDefault"
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Response Put Tag Amazon V1 Products Tag Put",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BaseModelTagUpdate"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized. Access token or subscriber key is missing or invalid.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedToken"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/amazon/v1/products/info": {
            "get": {
                "tags": [
                    "Amazon - Products"
                ],
                "summary": "Get Info",
                "operationId": "get_info_amazon_v1_products_info_get",
                "parameters": [
                    {
                        "description": "The identifier of a profile associated with the advertiser account. If not you have this data, use GET method on \"accounts\" resource to list profiles associated with the access token passed in the HTTP Authorization header.",
                        "required": false,
                        "schema": {
                            "title": "Profileid",
                            "minimum": 1,
                            "type": "integer",
                            "description": "The identifier of a profile associated with the advertiser account. If not you have this data, use GET method on \"accounts\" resource to list profiles associated with the access token passed in the HTTP Authorization header.",
                            "default": "{{profile_id}}"
                        },
                        "name": "profileId",
                        "in": "query"
                    },
                    {
                        "description": "The subscriber is used to do all access control on the API, for example: control of requests, reports, limits and access products, etc.",
                        "required": false,
                        "schema": {
                            "title": "Ocp-Apim-Subscription-Key",
                            "maxLength": 32,
                            "minLength": 32,
                            "type": "string",
                            "description": "The subscriber is used to do all access control on the API, for example: control of requests, reports, limits and access products, etc.",
                            "default": "{{subscriber_key}}"
                        },
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header"
                    },
                    {
                        "description": "The authorization token is used to validate your identity in AD B2C, only accounts registered in our AD B2C can have API access.",
                        "required": true,
                        "schema": {
                            "title": "Authorization",
                            "pattern": "(^[A-Za-z0-9-_=]+\\.[A-Za-z0-9-_=]+\\.?[A-Za-z0-9-_.+\\/=]*$)|(^[B-b]earer\\s[A-Za-z0-9-_=]+\\.[A-Za-z0-9-_=]+\\.?[A-Za-z0-9-_.+\\/=]*$)",
                            "type": "string",
                            "description": "The authorization token is used to validate your identity in AD B2C, only accounts registered in our AD B2C can have API access."
                        },
                        "name": "Authorization",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Response Get Info Amazon V1 Products Info Get",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BaseModelProductInfo"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized. Access token or subscriber key is missing or invalid.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedToken"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Amazon - Products"
                ],
                "summary": "Put Info",
                "operationId": "put_info_amazon_v1_products_info_put",
                "parameters": [
                    {
                        "description": "The subscriber is used to do all access control on the API, for example: control of requests, reports, limits and access products, etc.",
                        "required": false,
                        "schema": {
                            "title": "Ocp-Apim-Subscription-Key",
                            "maxLength": 32,
                            "minLength": 32,
                            "type": "string",
                            "description": "The subscriber is used to do all access control on the API, for example: control of requests, reports, limits and access products, etc.",
                            "default": "{{subscriber_key}}"
                        },
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header"
                    },
                    {
                        "description": "The authorization token is used to validate your identity in AD B2C, only accounts registered in our AD B2C can have API access.",
                        "required": true,
                        "schema": {
                            "title": "Authorization",
                            "pattern": "(^[A-Za-z0-9-_=]+\\.[A-Za-z0-9-_=]+\\.?[A-Za-z0-9-_.+\\/=]*$)|(^[B-b]earer\\s[A-Za-z0-9-_=]+\\.[A-Za-z0-9-_=]+\\.?[A-Za-z0-9-_.+\\/=]*$)",
                            "type": "string",
                            "description": "The authorization token is used to validate your identity in AD B2C, only accounts registered in our AD B2C can have API access."
                        },
                        "name": "Authorization",
                        "in": "header"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ModelProductsInfoUpdate"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BaseModelProductInfoMessage"
                                }
                            }
                        }
                    },
                    "206": {
                        "description": "The data was not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Message"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The data was not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Message"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized. Access token or subscriber key is missing or invalid.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedToken"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Amazon - Products"
                ],
                "summary": "Post Info",
                "operationId": "post_info_amazon_v1_products_info_post",
                "parameters": [
                    {
                        "description": "The subscriber is used to do all access control on the API, for example: control of requests, reports, limits and access products, etc.",
                        "required": false,
                        "schema": {
                            "title": "Ocp-Apim-Subscription-Key",
                            "maxLength": 32,
                            "minLength": 32,
                            "type": "string",
                            "description": "The subscriber is used to do all access control on the API, for example: control of requests, reports, limits and access products, etc.",
                            "default": "{{subscriber_key}}"
                        },
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header"
                    },
                    {
                        "description": "The authorization token is used to validate your identity in AD B2C, only accounts registered in our AD B2C can have API access.",
                        "required": true,
                        "schema": {
                            "title": "Authorization",
                            "pattern": "(^[A-Za-z0-9-_=]+\\.[A-Za-z0-9-_=]+\\.?[A-Za-z0-9-_.+\\/=]*$)|(^[B-b]earer\\s[A-Za-z0-9-_=]+\\.[A-Za-z0-9-_=]+\\.?[A-Za-z0-9-_.+\\/=]*$)",
                            "type": "string",
                            "description": "The authorization token is used to validate your identity in AD B2C, only accounts registered in our AD B2C can have API access."
                        },
                        "name": "Authorization",
                        "in": "header"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ModelProductsInfo"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BaseModelProductInfoMessage"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The data was not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Message"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized. Access token or subscriber key is missing or invalid.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedToken"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Amazon - Products"
                ],
                "summary": "Delete Info",
                "operationId": "delete_info_amazon_v1_products_info_delete",
                "parameters": [
                    {
                        "description": "The subscriber is used to do all access control on the API, for example: control of requests, reports, limits and access products, etc.",
                        "required": false,
                        "schema": {
                            "title": "Ocp-Apim-Subscription-Key",
                            "maxLength": 32,
                            "minLength": 32,
                            "type": "string",
                            "description": "The subscriber is used to do all access control on the API, for example: control of requests, reports, limits and access products, etc.",
                            "default": "{{subscriber_key}}"
                        },
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header"
                    },
                    {
                        "description": "The authorization token is used to validate your identity in AD B2C, only accounts registered in our AD B2C can have API access.",
                        "required": true,
                        "schema": {
                            "title": "Authorization",
                            "pattern": "(^[A-Za-z0-9-_=]+\\.[A-Za-z0-9-_=]+\\.?[A-Za-z0-9-_.+\\/=]*$)|(^[B-b]earer\\s[A-Za-z0-9-_=]+\\.[A-Za-z0-9-_=]+\\.?[A-Za-z0-9-_.+\\/=]*$)",
                            "type": "string",
                            "description": "The authorization token is used to validate your identity in AD B2C, only accounts registered in our AD B2C can have API access."
                        },
                        "name": "Authorization",
                        "in": "header"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ModelProductsInfoDelete"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BaseModelProductInfoMessage"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The data was not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Message"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized. Access token or subscriber key is missing or invalid.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedToken"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/google/v1/pipe/adgroup": {
            "get": {
                "tags": [
                    "Google - Pipe"
                ],
                "summary": "Get Adgroup",
                "operationId": "get_adgroup_google_v1_pipe_adgroup_get",
                "parameters": [
                    {
                        "description": "Token from a previous request. Use in conjunction with the **maxResults** parameter to control pagination of the returned array.",
                        "required": false,
                        "schema": {
                            "title": "Nexttoken",
                            "maxLength": 32,
                            "minLength": 32,
                            "type": "string",
                            "description": "Token from a previous request. Use in conjunction with the **maxResults** parameter to control pagination of the returned array."
                        },
                        "name": "nextToken",
                        "in": "query"
                    },
                    {
                        "description": "Sets the maximum number of records returned per request. Use in conjunction with the **nextToken** parameter to control pagination. For example, supplying maxResults=20 with a previously returned token will fetch up to the next 20 items. In some cases, fewer items may be returned. Defaults to max page size (5000 per page). ",
                        "required": false,
                        "schema": {
                            "title": "Maxresults",
                            "maximum": 5000,
                            "minimum": 1,
                            "type": "integer",
                            "description": "Sets the maximum number of records returned per request. Use in conjunction with the **nextToken** parameter to control pagination. For example, supplying maxResults=20 with a previously returned token will fetch up to the next 20 items. In some cases, fewer items may be returned. Defaults to max page size (5000 per page). ",
                            "default": 5000
                        },
                        "name": "maxResults",
                        "in": "query"
                    },
                    {
                        "description": "The subscriber is used to do all access control on the API, for example: control of requests, reports, limits and access products, etc.",
                        "required": false,
                        "schema": {
                            "title": "Ocp-Apim-Subscription-Key",
                            "maxLength": 32,
                            "minLength": 32,
                            "type": "string",
                            "description": "The subscriber is used to do all access control on the API, for example: control of requests, reports, limits and access products, etc.",
                            "default": "{{subscriber_key}}"
                        },
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header"
                    },
                    {
                        "description": "The authorization token is used to validate your identity in AD B2C, only accounts registered in our AD B2C can have API access.",
                        "required": true,
                        "schema": {
                            "title": "Authorization",
                            "pattern": "(^[A-Za-z0-9-_=]+\\.[A-Za-z0-9-_=]+\\.?[A-Za-z0-9-_.+\\/=]*$)|(^[B-b]earer\\s[A-Za-z0-9-_=]+\\.[A-Za-z0-9-_=]+\\.?[A-Za-z0-9-_.+\\/=]*$)",
                            "type": "string",
                            "description": "The authorization token is used to validate your identity in AD B2C, only accounts registered in our AD B2C can have API access."
                        },
                        "name": "Authorization",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/app__v1__google__schema__output__resource__pipe__BaseModelAdGroupPage"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized. Access token or subscriber key is missing or invalid.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedToken"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "AmazonReportIn": {
                "title": "AmazonReportIn",
                "required": [
                    "reportType",
                    "formatType",
                    "reportDate",
                    "profileId"
                ],
                "type": "object",
                "properties": {
                    "reportType": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ReportType"
                            }
                        ],
                        "description": "The type of entity for which the report should be generated. Available values: campaign, adgroup, keyword, product, target."
                    },
                    "formatType": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/FormatType"
                            }
                        ],
                        "description": "File type will be generated. Available values: CSV, JSON"
                    },
                    "reportDate": {
                        "title": "Reportdate",
                        "type": "string",
                        "description": "The date for which to retrieve the performance report in YYYY-MM-DD format.",
                        "format": "date"
                    },
                    "profileId": {
                        "title": "Profileid",
                        "type": "integer",
                        "description": "The identifier of a profile associated with the advertiser account. If not you have this data, use GET method on \"accounts\" resource to list profiles associated with the access token passed in the HTTP Authorization header."
                    }
                }
            },
            "AuthToken": {
                "title": "AuthToken",
                "required": [
                    "authorization",
                    "refresh"
                ],
                "type": "object",
                "properties": {
                    "authorization": {
                        "$ref": "#/components/schemas/Authorization"
                    },
                    "refresh": {
                        "$ref": "#/components/schemas/Refresh"
                    }
                }
            },
            "Authorization": {
                "title": "Authorization",
                "required": [
                    "token",
                    "type",
                    "expires_in",
                    "not_before",
                    "note"
                ],
                "type": "object",
                "properties": {
                    "token": {
                        "title": "Token",
                        "type": "string"
                    },
                    "type": {
                        "title": "Type",
                        "type": "string"
                    },
                    "expires_in": {
                        "title": "Expires In",
                        "type": "integer"
                    },
                    "not_before": {
                        "title": "Not Before",
                        "type": "integer"
                    },
                    "note": {
                        "title": "Note",
                        "type": "string"
                    }
                }
            },
            "BaseModelACoSCampaigns": {
                "title": "BaseModelACoSCampaigns",
                "required": [
                    "percACoS",
                    "profileId",
                    "campaignNameNV"
                ],
                "type": "object",
                "properties": {
                    "percACoS": {
                        "title": "Percacos",
                        "type": "number"
                    },
                    "profileId": {
                        "title": "Profileid",
                        "type": "integer"
                    },
                    "id": {
                        "title": "Id",
                        "type": "string",
                        "format": "uuid"
                    },
                    "campaignNameNV": {
                        "title": "Campaignnamenv",
                        "type": "string"
                    }
                }
            },
            "BaseModelACoSCampaignsTransac": {
                "title": "BaseModelACoSCampaignsTransac",
                "required": [
                    "percACoS",
                    "profileId",
                    "campaignNameNV",
                    "action"
                ],
                "type": "object",
                "properties": {
                    "percACoS": {
                        "title": "Percacos",
                        "type": "number"
                    },
                    "profileId": {
                        "title": "Profileid",
                        "type": "integer"
                    },
                    "id": {
                        "title": "Id",
                        "type": "string",
                        "format": "uuid"
                    },
                    "campaignNameNV": {
                        "title": "Campaignnamenv",
                        "type": "string"
                    },
                    "action": {
                        "$ref": "#/components/schemas/app__v1__amazon__schema__output__resource__parameters__ModelEnumStatus"
                    }
                }
            },
            "BaseModelACoSDefaultDelete": {
                "title": "BaseModelACoSDefaultDelete",
                "required": [
                    "message"
                ],
                "type": "object",
                "properties": {
                    "message": {
                        "title": "Message",
                        "type": "string"
                    }
                }
            },
            "BaseModelACoSProducts": {
                "title": "BaseModelACoSProducts",
                "required": [
                    "percACoS",
                    "profileId",
                    "asin"
                ],
                "type": "object",
                "properties": {
                    "percACoS": {
                        "title": "Percacos",
                        "type": "number"
                    },
                    "profileId": {
                        "title": "Profileid",
                        "type": "integer"
                    },
                    "id": {
                        "title": "Id",
                        "type": "string",
                        "format": "uuid"
                    },
                    "asin": {
                        "title": "Asin",
                        "type": "string"
                    }
                }
            },
            "BaseModelACoSProductsTransac": {
                "title": "BaseModelACoSProductsTransac",
                "required": [
                    "percACoS",
                    "profileId",
                    "asin",
                    "action"
                ],
                "type": "object",
                "properties": {
                    "percACoS": {
                        "title": "Percacos",
                        "type": "number"
                    },
                    "profileId": {
                        "title": "Profileid",
                        "type": "integer"
                    },
                    "id": {
                        "title": "Id",
                        "type": "string",
                        "format": "uuid"
                    },
                    "asin": {
                        "title": "Asin",
                        "type": "string"
                    },
                    "action": {
                        "$ref": "#/components/schemas/app__v1__amazon__schema__output__resource__parameters__ModelEnumStatus"
                    }
                }
            },
            "BaseModelAccounts": {
                "title": "BaseModelAccounts",
                "required": [
                    "company",
                    "sellers"
                ],
                "type": "object",
                "properties": {
                    "company": {
                        "title": "Company",
                        "type": "string"
                    },
                    "sellers": {
                        "title": "Sellers",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BaseModelSellersList"
                        }
                    }
                }
            },
            "BaseModelAmazonReport": {
                "title": "BaseModelAmazonReport",
                "required": [
                    "reportURL"
                ],
                "type": "object",
                "properties": {
                    "reportURL": {
                        "title": "Reporturl",
                        "type": "string",
                        "description": "File url for you to download the report."
                    }
                }
            },
            "BaseModelCampaign": {
                "title": "BaseModelCampaign",
                "required": [
                    "id",
                    "profileId",
                    "campaignId",
                    "campaignName"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Id",
                        "type": "integer"
                    },
                    "profileId": {
                        "title": "Profileid",
                        "type": "integer"
                    },
                    "campaignId": {
                        "title": "Campaignid",
                        "type": "integer"
                    },
                    "campaignName": {
                        "title": "Campaignname",
                        "type": "string"
                    },
                    "targetingType": {
                        "title": "Targetingtype",
                        "type": "string"
                    },
                    "campaignType": {
                        "title": "Campaigntype",
                        "type": "string"
                    },
                    "startDate": {
                        "title": "Startdate",
                        "type": "integer"
                    },
                    "endDate": {
                        "title": "Enddate",
                        "type": "integer"
                    },
                    "budgetType": {
                        "title": "Budgettype",
                        "type": "string"
                    },
                    "budget": {
                        "title": "Budget",
                        "type": "number"
                    },
                    "dailyBudget": {
                        "title": "Dailybudget",
                        "type": "number"
                    },
                    "biddingStrategy": {
                        "title": "Biddingstrategy",
                        "type": "string"
                    },
                    "state": {
                        "title": "State",
                        "type": "string"
                    },
                    "tactic": {
                        "title": "Tactic",
                        "type": "string"
                    },
                    "creativeType": {
                        "title": "Creativetype",
                        "type": "string"
                    },
                    "bidOptimization": {
                        "title": "Bidoptimization",
                        "type": "integer"
                    },
                    "bidMultiplier": {
                        "title": "Bidmultiplier",
                        "type": "integer"
                    },
                    "portfolioId": {
                        "title": "Portfolioid",
                        "type": "integer"
                    },
                    "servingStatus": {
                        "title": "Servingstatus",
                        "type": "string"
                    },
                    "spendingPolicy": {
                        "title": "Spendingpolicy",
                        "type": "string"
                    },
                    "nameAsin": {
                        "title": "Nameasin",
                        "type": "string"
                    },
                    "reportDate": {
                        "title": "Reportdate",
                        "type": "string",
                        "format": "date"
                    },
                    "createdDate": {
                        "title": "Createddate",
                        "type": "string",
                        "format": "date-time"
                    },
                    "pId": {
                        "title": "Pid",
                        "type": "string"
                    },
                    "isEnable": {
                        "title": "Isenable",
                        "type": "boolean",
                        "default": false
                    },
                    "isSp": {
                        "title": "Issp",
                        "type": "boolean",
                        "default": false
                    },
                    "isSbv": {
                        "title": "Issbv",
                        "type": "boolean",
                        "default": false
                    },
                    "isSb": {
                        "title": "Issb",
                        "type": "boolean",
                        "default": false
                    },
                    "isSd": {
                        "title": "Issd",
                        "type": "boolean",
                        "default": false
                    },
                    "fileName": {
                        "title": "Filename",
                        "type": "string"
                    },
                    "isQuartile": {
                        "title": "Isquartile",
                        "type": "boolean",
                        "default": false
                    }
                }
            },
            "BaseModelCampaignPage": {
                "title": "BaseModelCampaignPage",
                "required": [
                    "campaign"
                ],
                "type": "object",
                "properties": {
                    "nextToken": {
                        "title": "Nexttoken",
                        "maxLength": 32,
                        "minLength": 32,
                        "type": "string",
                        "description": "Token from a previous request. Use in conjunction with the maxResults parameter to control pagination of the returned array."
                    },
                    "count": {
                        "title": "Count",
                        "type": "integer",
                        "description": "Total lines available for you yo fetch.",
                        "default": 0
                    },
                    "campaign": {
                        "title": "Campaign",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BaseModelCampaign"
                        }
                    }
                }
            },
            "BaseModelKeyword": {
                "title": "BaseModelKeyword",
                "required": [
                    "id",
                    "adGroupId",
                    "campaignId",
                    "profileId",
                    "state",
                    "createdDate",
                    "reportDate",
                    "keywordId",
                    "keywordType",
                    "keywordText",
                    "bid"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Id",
                        "type": "integer"
                    },
                    "adGroupId": {
                        "title": "Adgroupid",
                        "type": "integer"
                    },
                    "campaignId": {
                        "title": "Campaignid",
                        "type": "integer"
                    },
                    "profileId": {
                        "title": "Profileid",
                        "type": "integer"
                    },
                    "state": {
                        "title": "State",
                        "type": "string"
                    },
                    "createdDate": {
                        "title": "Createddate",
                        "type": "string",
                        "format": "date-time"
                    },
                    "reportDate": {
                        "title": "Reportdate",
                        "type": "string",
                        "format": "date-time"
                    },
                    "keywordId": {
                        "title": "Keywordid",
                        "type": "integer"
                    },
                    "keywordType": {
                        "title": "Keywordtype",
                        "type": "string"
                    },
                    "matchType": {
                        "title": "Matchtype",
                        "type": "string"
                    },
                    "keywordText": {
                        "title": "Keywordtext",
                        "type": "string"
                    },
                    "bid": {
                        "title": "Bid",
                        "type": "number"
                    }
                }
            },
            "BaseModelKeywordPage": {
                "title": "BaseModelKeywordPage",
                "required": [
                    "keyword"
                ],
                "type": "object",
                "properties": {
                    "nextToken": {
                        "title": "Nexttoken",
                        "maxLength": 32,
                        "minLength": 32,
                        "type": "string",
                        "description": "Token from a previous request. Use in conjunction with the maxResults parameter to control pagination of the returned array."
                    },
                    "count": {
                        "title": "Count",
                        "type": "integer",
                        "description": "Total lines available for you yo fetch.",
                        "default": 0
                    },
                    "keyword": {
                        "title": "Keyword",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BaseModelKeyword"
                        }
                    }
                }
            },
            "BaseModelMarketPlacesList": {
                "title": "BaseModelMarketPlacesList",
                "required": [
                    "id",
                    "name",
                    "marketPlaceId",
                    "marketPlace",
                    "countryCode",
                    "currentTimeZone",
                    "region"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Id",
                        "type": "integer"
                    },
                    "name": {
                        "title": "Name",
                        "type": "string"
                    },
                    "marketPlaceId": {
                        "title": "Marketplaceid",
                        "type": "string"
                    },
                    "marketPlace": {
                        "title": "Marketplace",
                        "type": "string"
                    },
                    "countryCode": {
                        "title": "Countrycode",
                        "type": "string"
                    },
                    "currentTimeZone": {
                        "title": "Currenttimezone",
                        "type": "string"
                    },
                    "region": {
                        "title": "Region",
                        "type": "string"
                    }
                }
            },
            "BaseModelProduct": {
                "title": "BaseModelProduct",
                "required": [
                    "tagListId",
                    "id"
                ],
                "type": "object",
                "properties": {
                    "tagListId": {
                        "title": "Taglistid",
                        "type": "string",
                        "format": "uuid"
                    },
                    "value": {
                        "title": "Value",
                        "type": "string"
                    },
                    "id": {
                        "title": "Id",
                        "type": "string",
                        "format": "uuid"
                    }
                }
            },
            "BaseModelProductInfo": {
                "title": "BaseModelProductInfo",
                "required": [
                    "asin",
                    "coGS",
                    "fbmShipping",
                    "otherFees",
                    "profileId",
                    "shipping",
                    "infoProductId",
                    "createdDate",
                    "tagList"
                ],
                "type": "object",
                "properties": {
                    "asin": {
                        "title": "Asin",
                        "type": "string"
                    },
                    "coGS": {
                        "title": "Cogs",
                        "type": "number"
                    },
                    "fbmShipping": {
                        "title": "Fbmshipping",
                        "type": "number"
                    },
                    "otherFees": {
                        "title": "Otherfees",
                        "type": "number"
                    },
                    "profileId": {
                        "title": "Profileid",
                        "type": "integer"
                    },
                    "shipping": {
                        "title": "Shipping",
                        "type": "number"
                    },
                    "infoProductId": {
                        "title": "Infoproductid",
                        "type": "string",
                        "format": "uuid"
                    },
                    "createdDate": {
                        "title": "Createddate",
                        "type": "string"
                    },
                    "tagList": {
                        "title": "Taglist",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BaseModelProduct"
                        }
                    }
                }
            },
            "BaseModelProductInfoMessage": {
                "title": "BaseModelProductInfoMessage",
                "required": [
                    "message"
                ],
                "type": "object",
                "properties": {
                    "message": {
                        "title": "Message",
                        "type": "string"
                    }
                }
            },
            "BaseModelProductTagDefault": {
                "title": "BaseModelProductTagDefault",
                "required": [
                    "tagListId"
                ],
                "type": "object",
                "properties": {
                    "tagListId": {
                        "title": "Taglistid",
                        "type": "string",
                        "format": "uuid"
                    },
                    "value": {
                        "title": "Value",
                        "type": "string"
                    }
                }
            },
            "BaseModelProductTagUpdate": {
                "title": "BaseModelProductTagUpdate",
                "required": [
                    "tagListId",
                    "id"
                ],
                "type": "object",
                "properties": {
                    "tagListId": {
                        "title": "Taglistid",
                        "type": "string",
                        "format": "uuid"
                    },
                    "value": {
                        "title": "Value",
                        "type": "string"
                    },
                    "id": {
                        "title": "Id",
                        "type": "string",
                        "format": "uuid"
                    }
                }
            },
            "BaseModelReportId": {
                "title": "BaseModelReportId",
                "type": "object",
                "properties": {
                    "reportId": {
                        "title": "Reportid",
                        "maxLength": 32,
                        "minLength": 32,
                        "type": "string",
                        "description": "You will use to request the URL of the file to download."
                    }
                }
            },
            "BaseModelSellersList": {
                "title": "BaseModelSellersList",
                "required": [
                    "sellerName",
                    "sellerId",
                    "accountInfoType",
                    "accountInfoName",
                    "profileId",
                    "subNumber",
                    "marketPlaces"
                ],
                "type": "object",
                "properties": {
                    "sellerName": {
                        "title": "Sellername",
                        "type": "string"
                    },
                    "sellerId": {
                        "title": "Sellerid",
                        "type": "string"
                    },
                    "accountInfoType": {
                        "title": "Accountinfotype",
                        "type": "string"
                    },
                    "accountInfoName": {
                        "title": "Accountinfoname",
                        "type": "string"
                    },
                    "profileId": {
                        "title": "Profileid",
                        "type": "integer"
                    },
                    "subNumber": {
                        "title": "Subnumber",
                        "type": "string"
                    },
                    "marketPlaces": {
                        "title": "Marketplaces",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BaseModelMarketPlacesList"
                        }
                    }
                }
            },
            "BaseModelTag": {
                "title": "BaseModelTag",
                "required": [
                    "id",
                    "label",
                    "sequence"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Id",
                        "type": "string",
                        "format": "uuid"
                    },
                    "label": {
                        "title": "Label",
                        "type": "string"
                    },
                    "sequence": {
                        "title": "Sequence",
                        "maximum": 5,
                        "minimum": 1,
                        "type": "integer"
                    }
                }
            },
            "BaseModelTagDefault": {
                "title": "BaseModelTagDefault",
                "required": [
                    "id",
                    "label",
                    "profileId"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Id",
                        "type": "string",
                        "format": "uuid"
                    },
                    "label": {
                        "title": "Label",
                        "type": "string"
                    },
                    "profileId": {
                        "title": "Profileid",
                        "type": "integer"
                    }
                }
            },
            "BaseModelTagUpdate": {
                "title": "BaseModelTagUpdate",
                "required": [
                    "id",
                    "label",
                    "profileId",
                    "action"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Id",
                        "type": "string",
                        "format": "uuid"
                    },
                    "label": {
                        "title": "Label",
                        "type": "string"
                    },
                    "profileId": {
                        "title": "Profileid",
                        "type": "integer"
                    },
                    "action": {
                        "$ref": "#/components/schemas/app__v1__amazon__schema__output__resource__products__ModelEnumStatus"
                    }
                }
            },
            "BaseModelTargetAd": {
                "title": "BaseModelTargetAd",
                "required": [
                    "id",
                    "adGroupId",
                    "profileId",
                    "state",
                    "createdDate",
                    "reportDate",
                    "bid",
                    "expressionType",
                    "targetId"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Id",
                        "type": "integer"
                    },
                    "adGroupId": {
                        "title": "Adgroupid",
                        "type": "integer"
                    },
                    "campaignId": {
                        "title": "Campaignid",
                        "type": "integer"
                    },
                    "profileId": {
                        "title": "Profileid",
                        "type": "integer"
                    },
                    "state": {
                        "title": "State",
                        "type": "string"
                    },
                    "createdDate": {
                        "title": "Createddate",
                        "type": "string",
                        "format": "date-time"
                    },
                    "reportDate": {
                        "title": "Reportdate",
                        "type": "string",
                        "format": "date-time"
                    },
                    "bid": {
                        "title": "Bid",
                        "type": "number"
                    },
                    "expressionType": {
                        "title": "Expressiontype",
                        "type": "string"
                    },
                    "expressionValue": {
                        "title": "Expressionvalue",
                        "type": "string"
                    },
                    "targetId": {
                        "title": "Targetid",
                        "type": "integer"
                    },
                    "targetAdType": {
                        "title": "Targetadtype",
                        "type": "string"
                    }
                }
            },
            "BaseModelTargetAdPage": {
                "title": "BaseModelTargetAdPage",
                "required": [
                    "targetAd"
                ],
                "type": "object",
                "properties": {
                    "nextToken": {
                        "title": "Nexttoken",
                        "maxLength": 32,
                        "minLength": 32,
                        "type": "string",
                        "description": "Token from a previous request. Use in conjunction with the maxResults parameter to control pagination of the returned array."
                    },
                    "count": {
                        "title": "Count",
                        "type": "integer",
                        "description": "Total lines available for you yo fetch.",
                        "default": 0
                    },
                    "targetAd": {
                        "title": "Targetad",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BaseModelTargetAd"
                        }
                    }
                }
            },
            "DefaultError": {
                "title": "DefaultError",
                "required": [
                    "detail"
                ],
                "type": "object",
                "properties": {
                    "detail": {
                        "$ref": "#/components/schemas/MappingField"
                    }
                },
                "description": "Mapping default error."
            },
            "FormatType": {
                "title": "FormatType",
                "enum": [
                    "JSON",
                    "CSV"
                ],
                "type": "string",
                "description": "An enumeration."
            },
            "HTTPValidationError": {
                "title": "HTTPValidationError",
                "type": "object",
                "properties": {
                    "detail": {
                        "title": "Detail",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ValidationError"
                        }
                    }
                }
            },
            "MappingField": {
                "title": "MappingField",
                "required": [
                    "error",
                    "error_description"
                ],
                "type": "object",
                "properties": {
                    "message": {
                        "title": "Message",
                        "type": "string",
                        "default": "Invalid token."
                    },
                    "error": {
                        "title": "Error",
                        "type": "string"
                    },
                    "error_description": {
                        "title": "Error Description",
                        "type": "string"
                    }
                }
            },
            "Message": {
                "title": "Message",
                "required": [
                    "detail"
                ],
                "type": "object",
                "properties": {
                    "detail": {
                        "title": "Detail",
                        "type": "string"
                    }
                }
            },
            "ModelACoSCampaigns": {
                "title": "ModelACoSCampaigns",
                "required": [
                    "percACoS",
                    "profileId",
                    "campaignNameNV"
                ],
                "type": "object",
                "properties": {
                    "percACoS": {
                        "title": "Percacos",
                        "type": "number"
                    },
                    "profileId": {
                        "title": "Profileid",
                        "type": "integer"
                    },
                    "campaignNameNV": {
                        "title": "Campaignnamenv",
                        "type": "string"
                    }
                }
            },
            "ModelACoSCampaignsUpdate": {
                "title": "ModelACoSCampaignsUpdate",
                "required": [
                    "percACoS",
                    "profileId",
                    "campaignNameNV",
                    "id"
                ],
                "type": "object",
                "properties": {
                    "percACoS": {
                        "title": "Percacos",
                        "type": "number"
                    },
                    "profileId": {
                        "title": "Profileid",
                        "type": "integer"
                    },
                    "campaignNameNV": {
                        "title": "Campaignnamenv",
                        "type": "string"
                    },
                    "id": {
                        "title": "Id",
                        "type": "string",
                        "format": "uuid"
                    }
                }
            },
            "ModelACoSProducts": {
                "title": "ModelACoSProducts",
                "required": [
                    "percACoS",
                    "profileId",
                    "asin"
                ],
                "type": "object",
                "properties": {
                    "percACoS": {
                        "title": "Percacos",
                        "type": "number"
                    },
                    "profileId": {
                        "title": "Profileid",
                        "type": "integer"
                    },
                    "asin": {
                        "title": "Asin",
                        "type": "string"
                    }
                }
            },
            "ModelACoSProductsDelete": {
                "title": "ModelACoSProductsDelete",
                "required": [
                    "id",
                    "profileId"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Id",
                        "type": "string",
                        "format": "uuid"
                    },
                    "profileId": {
                        "title": "Profileid",
                        "type": "integer"
                    }
                }
            },
            "ModelACoSProductsUpdate": {
                "title": "ModelACoSProductsUpdate",
                "required": [
                    "percACoS",
                    "profileId",
                    "asin",
                    "id"
                ],
                "type": "object",
                "properties": {
                    "percACoS": {
                        "title": "Percacos",
                        "type": "number"
                    },
                    "profileId": {
                        "title": "Profileid",
                        "type": "integer"
                    },
                    "asin": {
                        "title": "Asin",
                        "type": "string"
                    },
                    "id": {
                        "title": "Id",
                        "type": "string",
                        "format": "uuid"
                    }
                }
            },
            "ModelProductsInfo": {
                "title": "ModelProductsInfo",
                "required": [
                    "asin",
                    "coGS",
                    "fbmShipping",
                    "otherFees",
                    "profileId",
                    "shipping",
                    "tagList"
                ],
                "type": "object",
                "properties": {
                    "asin": {
                        "title": "Asin",
                        "type": "string"
                    },
                    "coGS": {
                        "title": "Cogs",
                        "type": "number"
                    },
                    "fbmShipping": {
                        "title": "Fbmshipping",
                        "type": "number"
                    },
                    "otherFees": {
                        "title": "Otherfees",
                        "type": "number"
                    },
                    "profileId": {
                        "title": "Profileid",
                        "type": "integer"
                    },
                    "shipping": {
                        "title": "Shipping",
                        "type": "number"
                    },
                    "tagList": {
                        "title": "Taglist",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BaseModelProductTagDefault"
                        }
                    }
                }
            },
            "ModelProductsInfoDelete": {
                "title": "ModelProductsInfoDelete",
                "required": [
                    "infoProductId",
                    "profileId"
                ],
                "type": "object",
                "properties": {
                    "infoProductId": {
                        "title": "Infoproductid",
                        "type": "string",
                        "format": "uuid"
                    },
                    "profileId": {
                        "title": "Profileid",
                        "type": "integer"
                    }
                }
            },
            "ModelProductsInfoUpdate": {
                "title": "ModelProductsInfoUpdate",
                "required": [
                    "asin",
                    "coGS",
                    "fbmShipping",
                    "otherFees",
                    "profileId",
                    "shipping",
                    "tagList",
                    "infoProductId"
                ],
                "type": "object",
                "properties": {
                    "asin": {
                        "title": "Asin",
                        "type": "string"
                    },
                    "coGS": {
                        "title": "Cogs",
                        "type": "number"
                    },
                    "fbmShipping": {
                        "title": "Fbmshipping",
                        "type": "number"
                    },
                    "otherFees": {
                        "title": "Otherfees",
                        "type": "number"
                    },
                    "profileId": {
                        "title": "Profileid",
                        "type": "integer"
                    },
                    "shipping": {
                        "title": "Shipping",
                        "type": "number"
                    },
                    "tagList": {
                        "title": "Taglist",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BaseModelProductTagUpdate"
                        }
                    },
                    "infoProductId": {
                        "title": "Infoproductid",
                        "type": "string",
                        "format": "uuid"
                    }
                }
            },
            "Refresh": {
                "title": "Refresh",
                "required": [
                    "token",
                    "expires_in",
                    "note"
                ],
                "type": "object",
                "properties": {
                    "token": {
                        "title": "Token",
                        "type": "string"
                    },
                    "expires_in": {
                        "title": "Expires In",
                        "type": "integer"
                    },
                    "note": {
                        "title": "Note",
                        "type": "string"
                    }
                }
            },
            "RefreshToken": {
                "title": "RefreshToken",
                "required": [
                    "refresh_token"
                ],
                "type": "object",
                "properties": {
                    "refresh_token": {
                        "title": "Refresh Token",
                        "type": "string"
                    }
                }
            },
            "ReportType": {
                "title": "ReportType",
                "enum": [
                    "campaign",
                    "adgroup",
                    "keyword",
                    "product",
                    "target"
                ],
                "type": "string",
                "description": "An enumeration."
            },
            "UnauthorizedToken": {
                "title": "UnauthorizedToken",
                "required": [
                    "message"
                ],
                "type": "object",
                "properties": {
                    "message": {
                        "title": "Message",
                        "type": "string"
                    },
                    "statusCode": {
                        "title": "Statuscode",
                        "type": "integer",
                        "default": 401
                    }
                },
                "description": "Mapping default error."
            },
            "ValidateToken": {
                "title": "ValidateToken",
                "type": "object",
                "properties": {
                    "message": {
                        "title": "Message",
                        "type": "string",
                        "default": "ok"
                    }
                }
            },
            "ValidationError": {
                "title": "ValidationError",
                "required": [
                    "loc",
                    "msg",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "loc": {
                        "title": "Location",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "msg": {
                        "title": "Message",
                        "type": "string"
                    },
                    "type": {
                        "title": "Error Type",
                        "type": "string"
                    }
                }
            },
            "app__v1__amazon__schema__output__resource__parameters__ModelEnumStatus": {
                "title": "ModelEnumStatus",
                "enum": [
                    "Inserted with success.",
                    "Updated with success.",
                    "Data already exists.",
                    "Data does not exists.",
                    "Error."
                ],
                "type": "string",
                "description": "An enumeration."
            },
            "app__v1__amazon__schema__output__resource__pipe__BaseModelAdGroup": {
                "title": "BaseModelAdGroup",
                "required": [
                    "id",
                    "adGroupId",
                    "campaignId",
                    "profileId",
                    "state",
                    "createdDate",
                    "reportDate",
                    "adGroupName",
                    "defaultBid"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Id",
                        "type": "integer"
                    },
                    "adGroupId": {
                        "title": "Adgroupid",
                        "type": "integer"
                    },
                    "campaignId": {
                        "title": "Campaignid",
                        "type": "integer"
                    },
                    "profileId": {
                        "title": "Profileid",
                        "type": "integer"
                    },
                    "state": {
                        "title": "State",
                        "type": "string"
                    },
                    "createdDate": {
                        "title": "Createddate",
                        "type": "string",
                        "format": "date-time"
                    },
                    "reportDate": {
                        "title": "Reportdate",
                        "type": "string",
                        "format": "date-time"
                    },
                    "adGroupName": {
                        "title": "Adgroupname",
                        "type": "string"
                    },
                    "defaultBid": {
                        "title": "Defaultbid",
                        "type": "number"
                    },
                    "adGroupType": {
                        "title": "Adgrouptype",
                        "type": "string"
                    },
                    "nameAsin": {
                        "title": "Nameasin",
                        "type": "string"
                    }
                }
            },
            "app__v1__amazon__schema__output__resource__pipe__BaseModelAdGroupPage": {
                "title": "BaseModelAdGroupPage",
                "required": [
                    "adGroup"
                ],
                "type": "object",
                "properties": {
                    "nextToken": {
                        "title": "Nexttoken",
                        "maxLength": 32,
                        "minLength": 32,
                        "type": "string",
                        "description": "Token from a previous request. Use in conjunction with the maxResults parameter to control pagination of the returned array."
                    },
                    "count": {
                        "title": "Count",
                        "type": "integer",
                        "description": "Total lines available for you yo fetch.",
                        "default": 0
                    },
                    "adGroup": {
                        "title": "Adgroup",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/app__v1__amazon__schema__output__resource__pipe__BaseModelAdGroup"
                        }
                    }
                }
            },
            "app__v1__amazon__schema__output__resource__products__ModelEnumStatus": {
                "title": "ModelEnumStatus",
                "enum": [
                    "Updated with success.",
                    "Data does not exists.",
                    "Error."
                ],
                "type": "string",
                "description": "An enumeration."
            },
            "app__v1__google__schema__output__resource__pipe__BaseModelAdGroup": {
                "title": "BaseModelAdGroup",
                "required": [
                    "id",
                    "accountId",
                    "campaignId",
                    "campaignName",
                    "adGroupId",
                    "adGroupName",
                    "type",
                    "status",
                    "CPCBidMicros"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Id",
                        "type": "integer"
                    },
                    "accountId": {
                        "title": "Accountid",
                        "type": "integer"
                    },
                    "campaignId": {
                        "title": "Campaignid",
                        "type": "integer"
                    },
                    "campaignName": {
                        "title": "Campaignname",
                        "type": "string"
                    },
                    "adGroupId": {
                        "title": "Adgroupid",
                        "type": "integer"
                    },
                    "adGroupName": {
                        "title": "Adgroupname",
                        "type": "string"
                    },
                    "type": {
                        "title": "Type",
                        "type": "string"
                    },
                    "status": {
                        "title": "Status",
                        "type": "string"
                    },
                    "finalUrlSuffix": {
                        "title": "Finalurlsuffix",
                        "type": "string"
                    },
                    "trackingUrlTemplate": {
                        "title": "Trackingurltemplate",
                        "type": "string"
                    },
                    "CPCBidMicros": {
                        "title": "Cpcbidmicros",
                        "type": "integer"
                    }
                }
            },
            "app__v1__google__schema__output__resource__pipe__BaseModelAdGroupPage": {
                "title": "BaseModelAdGroupPage",
                "required": [
                    "adGroup"
                ],
                "type": "object",
                "properties": {
                    "nextToken": {
                        "title": "Nexttoken",
                        "maxLength": 32,
                        "minLength": 32,
                        "type": "string",
                        "description": "Token from a previous request. Use in conjunction with the maxResults parameter to control pagination of the returned array."
                    },
                    "count": {
                        "title": "Count",
                        "type": "integer",
                        "description": "Total lines available for you yo fetch.",
                        "default": 0
                    },
                    "adGroup": {
                        "title": "Adgroup",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/app__v1__google__schema__output__resource__pipe__BaseModelAdGroup"
                        }
                    }
                }
            }
        }
    }
}